@use "@unite/scss/core/Profile" as ps;
@use "@unite/scss/grid/GridLayout";

//
@use "@unite/scss/design/Shape" as s;

//
@layer ui-grid {

    //
    *[data-shape="wavy"] .ui-item-design, .ui-item-design[data-shape="wavy"] {
        & {
            --clip-amplitude: 0.06;
            --clip-freq: 8;
            --clip-path: #{s.Integrate("WavyFx", 100)};
            --corrector: 1.1;
        }

        //
        & {
            clip-path: var(--clip-path);
            border-radius: calc(var(--icon-size, 100%) * 0.5);
        }
    }

    //
    *[data-shape="circle"] .ui-item-design, .ui-item-design[data-shape="circle"] {
        border-radius: calc(var(--icon-size, 100%) * 0.5);
    }

    //
    *[data-shape="tear"] .ui-item-design, .ui-item-design[data-shape="tear"] {
        border-radius: calc(var(--icon-size, 100%) * 0.5);
        border-end-end-radius: calc(var(--icon-size, 100%) * 0.125);
    }

    //
    *[data-shape="square"] .ui-item-design, .ui-item-design[data-shape="square"] {
        border-radius: calc(var(--icon-size, 100%) * 0.25);
    }

    //
    .ui-grid-pages,
    .ui-desktop-grid {
        @include ps.stretch;
        @include ps.grid-layout();

        //
        & {
            --padding-h: 1rem;
            --padding-v: 1.5rem;
        }

        //
        & {
            direction: ltr;
            zoom: 1;

            //
            container-type: size;
            contain: strict;

            //
            pointer-events: auto;
            overflow: visible;

            //
            padding-inline: var(--padding-h);
            padding-block: var(--padding-v);
        }

        //
        @media (orientation: portrait) {
            padding-inline: var(--padding-h);
            padding-block: var(--padding-v);
        }

        //
        @media (orientation: landscape) {
            padding-inline: var(--padding-v);
            padding-block: var(--padding-h);
        }

        //
        & > :where(*) {
            grid-column: 1 / 1 span;
            grid-row: 1 / 1 span;
        };
    }

    //
    .ui-grid-page {
        & { pointer-events: none; };
        & {
            --c-gap: calc(4dvmin / max(var(--zoom, 1), 0.125));
            --r-gap: calc(4dvmin / max(var(--zoom, 1), 0.125));
        }

        //
        .ux-grid-item {
            & {
                display: flex;
                inline-size: max-content;
                block-size: max-content;
                overflow: visible;
                filter: drop-shadow(0px 0px 0.25rem #00000060);
            }

            //
            &[data-dragging="true"] {
                z-index: 99;
            }
        }

        //
        .ux-grid-item.ui-item-label {
            @include ps.no-wrap;

            //
            & {
                --translate-x: 0px;
                --translate-y: calc(var(--icon-size) * 0.5 * 1.3333);
            }

            //
            & {
                pointer-events: none;
                display: inline flow;
                overflow: visible;

                //
                font-size: calc(var(--icon-size) * 0.175);
                filter: drop-shadow(0px 0px 0.25rem #00000080);
            }
        }

        //
        .ui-item-design {
            @include ps.limited-block(var(--icon-size));
            @include ps.limited-inline(var(--icon-size));

            //
            & {
                --scale: var(--corrector, 1);
                --translate-x: 0px;
                --translate-y: 0px;
            };

            //
            & {
                position: relative;
                aspect-ratio: 1 / 1;
                inset: 0px;

                //
                will-change:
                    --rx, --ry,
                    --drag-x,
                    --drag-y,
                    --resize-x,
                    --resize-y,
                    --translate-x,
                    --translate-y;

                //
                overflow: hidden;
                pointer-events: auto;
                cursor: pointer;

                //
                display: flex;
                padding: calc(var(--icon-size) * 0.265 * var(--corrector));

                //
                translate: 0px 0px 0px !important;
                transform: none !important;
            }
        }
    }
};
